{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Nodejs Rest App API",
    "description": "Find out how your APIs work",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api-docs",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "schemas": ["http", "https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "headers",
      "name": "authorization"
    }
  },

  "paths": {
    "/api/users/register": {
      "post": {
        "summary": "User registration",
        "tags": ["Users"],
        "description": "User registration in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User registration",
            "schema": {
              "$ref": "#/definitions/RegisterUser"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "User created, registration successful",
            "schema": {
              "$ref": "#/definitions/CurrentUser"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },

    "/api/users/login": {
      "post": {
        "summary": "User login",
        "tags": ["Users"],
        "description": "User login in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User login",
            "schema": {
              "$ref": "#/definitions/CurrentUser"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Login Successful",
            "schema": {
              "$ref": "#/definitions/CurrentUser"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },

    "/api/users/logout": {
      "post": {
        "summary": "User logout",
        "tags": ["Users"],
        "description": "User logout",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User logout",
            "schema": {
              "$ref": "#/definitions/UserId"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Logout Successful, No content"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },

    "/api/users/verify/:verificationToken": {
      "get": {
        "summary": "User verification",
        "tags": ["Users"],
        "description": "User verification",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User verification",
            "schema": {
              "$ref": "#/definitions/Verify"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Verification successful",
            "schema": {
              "$ref": "#/definitions/Verify"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },

    "/api/users/current": {
      "get": {
        "summary": "Current user",
        "tags": ["Users"],
        "description": "Current user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Current user",
            "schema": {
              "$ref": "#/definitions/CurrentUser"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Get current user successful",
            "schema": {
              "$ref": "#/definitions/CurrentUser"
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },

    "/api/users": {
      "patch": {
        "summary": "Subscription updating",
        "tags": ["Users"],
        "description": "Subscription updating",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Subscription updating",
            "schema": {
              "$ref": "#/definitions/UserId"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Subscription updated successful",
            "schema": {
              "$ref": "#/definitions/UpdateSubscription"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },

    "/api/users/avatars": {
      "patch": {
        "summary": "Avatar updating",
        "tags": ["Users"],
        "description": "Avatar updating",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Avatar updating",
            "schema": {
              "$ref": "#/definitions/UserId"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Avatar updated successful",
            "schema": {
              "$ref": "#/definitions/UpdateAvatar"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },

    "/api/contacts/": {
      "get": {
        "summary": "Get all contacts",
        "tags": ["Contacts"],
        "description": "All contacts",
        "parameters": [
          {
            "name": "contact",
            "in": "body",
            "description": "All contacts",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "All contacts",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },

    "/api/contacts/:contactId/": {
      "get": {
        "summary": "Get contact by Id",
        "tags": ["Contacts"],
        "description": "Get contact by Id",
        "parameters": [
          {
            "name": "contact",
            "in": "body",
            "description": "Get contact by Id",
            "schema": {
              "$ref": "#/definitions/ContactId"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "All contacts",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },

    "/api/contacts": {
      "post": {
        "summary": "Add contact",
        "tags": ["Contacts"],
        "description": "Add contact",
        "parameters": [
          {
            "name": "contact",
            "in": "body",
            "description": "Add contact",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Add contact",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },

    "/api/contacts/:contactID": {
      "delete": {
        "summary": "Delete contact",
        "tags": ["Contacts"],
        "description": "Delete contact",
        "parameters": [
          {
            "name": "contact",
            "in": "body",
            "description": "Delete contact",
            "schema": {
              "$ref": "#/definitions/ContactId"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact deleted"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },

    "/api/contacts/:contactId": {
      "put": {
        "summary": "Update contact",
        "tags": ["Contacts"],
        "description": "Update contact",
        "parameters": [
          {
            "name": "contact",
            "in": "body",
            "description": "Update contact",
            "schema": {
              "$ref": "#/definitions/ContactId"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Update contact",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },

    "/api/contacts/:contactId/favorite": {
      "patch": {
        "summary": "Update status contact",
        "tags": ["Contacts"],
        "description": "Update status contact",
        "parameters": [
          {
            "name": "contact",
            "in": "body",
            "description": "Update status contact",
            "schema": {
              "$ref": "#/definitions/ContactId"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Update status contact",
            "schema": {
              "$ref": "#/definitions/FavoriteContact"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    }
  },

  "definitions": {
    "User": {
      "properties": {
        "email": { "type": "string" },
        "password": { "type": "string" },
        "subscription": { "type": "string" },
        "verify": { "type": "string" },
        "verificationToken": { "type": "string" },
        "avatarURL": { "type": "string" }
      }
    },

    "RegisterUser": {
      "properties": {
        "email": { "type": "string" },
        "password": { "type": "string" },
        "subscription": { "type": "string" }
      }
    },

    "CurrentUser": {
      "properties": {
        "email": { "type": "string" },
        "subscription": { "type": "string" }
      }
    },

    "UpdateSubscription": {
      "properties": {
        "_id": { "type": "string" },
        "subscription": { "type": "string" }
      }
    },

    "UpdateAvatar": {
      "properties": {
        "_id": { "type": "string" },
        "avatarURL": { "type": "string" }
      }
    },

    "UserId": {
      "properties": {
        "_id": { "type": "string" }
      }
    },

    "Verify": {
      "properties": {
        "verificationToken": { "type": "string" }
      }
    },

    "Contact": {
      "properties": {
        "email": { "type": "string" },
        "name": { "type": "string" },
        "phone": { "type": "string" },
        "favorite": { "type": "boolean" },
        "owner": { "type": "string" }
      }
    },

    "ContactId": {
      "properties": {
        "id": { "type": "string" }
      }
    },

    "FavoriteContact": {
      "properties": {
        "favorite": { "type": "boolean" }
      }
    }
  }
}
