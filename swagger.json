{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Swagger Nodejs Rest Api",
    "description": "Showing off Nodejs rest Api work",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://nodejs-rest-api-ry5x.onrender.com" }],
  "tags": [
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Contacts",
      "description": "Contacts endpoints"
    }
  ],

  "paths": {
    "/api/users/register": {
      "post": {
        "summary": "User registration",
        "tags": ["Users"],
        "description": "User registration in system",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created, registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Conflict (Provided email already exists)",
            "content": {}
          }
        }
      }
    },

    "/api/users/login": {
      "post": {
        "summary": "User login",
        "tags": ["Users"],
        "description": "User login in system",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },

    "/api/users/logout": {
      "post": {
        "summary": "User logout",
        "tags": ["Users"],
        "description": "User logout",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Logout Successful, No content",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },

    "/api/users/current": {
      "get": {
        "summary": "Current user",
        "tags": ["Users"],
        "description": "Current user",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get current user successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },

    "/api/users": {
      "patch": {
        "summary": "Subscription updating",
        "tags": ["Users"],
        "description": "Subscription updating",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Subscription updating",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Subscription updated successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },

    "/api/users/avatars": {
      "patch": {
        "summary": "Avatar updating",
        "tags": ["Users"],
        "description": "Avatar updating",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Avatar updating",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar updated successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },

    "/api/contacts": {
      "get": {
        "summary": "Get all contacts",
        "tags": ["Contacts"],
        "description": "All contacts",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get all contacts successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllContactsresponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Add contact",
        "tags": ["Contacts"],
        "description": "Add contact",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Add contact",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddContactRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact added successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },

    "/api/contacts/:contactId": {
      "get": {
        "summary": "Get contact by Id",
        "tags": ["Contacts"],
        "description": "Get contact by Id",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get contact by Id successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContactByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Delete contact",
        "tags": ["Contacts"],
        "description": "Delete contact",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Contact deleted, no content"
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Update contact",
        "tags": ["Contacts"],
        "description": "Update contact",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Update contact",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },

    "/api/contacts/:contactId/favorite": {
      "patch": {
        "summary": "Update status contact",
        "tags": ["Contacts"],
        "description": "Update status contact",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Update status contact",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusContactRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status contact updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateStatusContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email.",
            "format": "email",
            "example": "mango@email.com"
          },
          "password": {
            "type": "string",
            "description": "User's password.",
            "example": "Mango12345"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "mango@email.com"
          },
          "subscription": {
            "type": "string",
            "description": "User's subscription. Subscription field must be one of the next value - starter, pro or business",
            "enum": ["starter", "pro", "business"],
            "example": "pro"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email.",
            "format": "email",
            "example": "zirdekoltu@gufum.com"
          },
          "password": {
            "type": "string",
            "description": "User's password.",
            "example": "krasota"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "format": "Bearer Token"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "zirdekoltu@gufum.com"
              },
              "subscription": {
                "type": "string",
                "description": "User's subscription. Subscription field must be one of the next value - starter, pro or business",
                "enum": ["starter", "pro", "business"],
                "example": "pro"
              }
            }
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "zirdekoltu@gufum.com"
          },
          "subscription": {
            "type": "string",
            "description": "User's subscription. Subscription field must be one of the next value - starter, pro or business",
            "enum": ["starter", "pro", "business"],
            "example": "pro"
          }
        }
      },
      "UpdateSubscriptionRequest": {
        "type": "object",
        "required": ["subscription"],
        "properties": {
          "subscription": {
            "type": "string",
            "description": "User's subscription. Subscription field must be one of the next value - starter, pro or business",
            "enum": ["starter", "pro", "business"],
            "example": "pro"
          }
        }
      },
      "UpdateSubscriptionResponse": {
        "type": "object",
        "properties": {
          "subscription": {
            "type": "string",
            "description": "User's subscription. Subscription field must be one of the next value - starter, pro or business",
            "enum": ["starter", "pro", "business"],
            "example": "pro"
          }
        }
      },
      "UpdateAvatarRequest": {
        "type": "object",
        "required": ["avatarURL"],
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User's avatar"
          }
        }
      },
      "UpdateAvatarResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User's avatar"
          }
        }
      },

      "AllContactsresponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "Contact email",
              "format": "email",
              "example": "kiwi@mail.com"
            },
            "name": {
              "type": "string",
              "description": "Contact name",
              "example": "Kiwi"
            },
            "phone": {
              "type": "string",
              "description": "Contact phone",
              "example": "1234567"
            },
            "favorite": {
              "type": "boolean",
              "description": "favorite contact",
              "example": "false"
            },
            "owner": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "User id",
                  "example": "64afb6371919ee3f3a63fbc7"
                },
                "email": {
                  "type": "string",
                  "description": "User email",
                  "format": "email",
                  "example": "zirdekoltu@gufum.com"
                }
              }
            }
          }
        }
      },
      "AddContactRequest": {
        "type": "object",
        "required": ["name", "email", "phone"],
        "properties": {
          "email": {
            "type": "string",
            "description": "Contact email",
            "format": "email",
            "example": "kiwi@mail.com"
          },
          "name": {
            "type": "string",
            "description": "Contact name",
            "example": "Kiwi"
          },
          "phone": {
            "type": "string",
            "description": "Contact phone",
            "example": "1234567"
          },
          "favorite": {
            "type": "boolean",
            "description": "Favorite contact",
            "example": "false"
          }
        }
      },
      "AddContactResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Contact email",
            "format": "email",
            "example": "kiwi@mail.com"
          },
          "name": {
            "type": "string",
            "description": "Contact name",
            "example": "Kiwi"
          },
          "phone": {
            "type": "string",
            "description": "Contact phone",
            "example": "1234567"
          },
          "favorite": {
            "type": "boolean",
            "description": "Favorite contact",
            "example": "false"
          },
          "owner": {
            "type": "string",
            "description": "User id",
            "example": "64afb6371919ee3f3a63fbc7"
          },
          "_id": {
            "type": "string",
            "description": "Contact id",
            "example": "64f06b088b6dd050acd85660"
          }          
        }
      },
      "GetContactByIdResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Contact email",
            "format": "email",
            "example": "kiwi@mail.com"
          },
          "name": {
            "type": "string",
            "description": "Contact name",
            "example": "Kiwi"
          },
          "phone": {
            "type": "string",
            "description": "Contact phone",
            "example": "1234567"
          },
          "favorite": {
            "type": "boolean",
            "description": "Favorite contact",
            "example": "false"
          },
          "owner": {
            "type": "string",
            "description": "User id",
            "example": "64afb6371919ee3f3a63fbc7"
          },
          "_id": {
            "type": "string",
            "description": "Contact id",
            "example": "64f06b088b6dd050acd85660"
          }  
        }
      },
      "UpdateContactRequest": {
        "type": "object",
        "required": ["name", "email", "phone"],
        "properties": {
          "email": {
            "type": "string",
            "description": "Contact email",
            "format": "email",
            "example": "kiwi@mail.com"
          },
          "name": {
            "type": "string",
            "description": "Contact name",
            "example": "Kiwi"
          },
          "phone": {
            "type": "string",
            "description": "Contact phone",
            "example": "1234567"
          },
          "favorite": {
            "type": "boolean",
            "description": "Favorite contact",
            "example": "false"
          }
        }
      },
      "UpdateContactResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Contact email",
            "format": "email",
            "example": "kiwi@mail.com"
          },
          "name": {
            "type": "string",
            "description": "Contact name",
            "example": "Kiwi"
          },
          "phone": {
            "type": "string",
            "description": "Contact phone",
            "example": "1234567"
          },
          "favorite": {
            "type": "boolean",
            "description": "Favorite contact",
            "example": "false"
          },
          "owner": {
            "type": "string",
            "description": "User id",
            "example": "64afb6371919ee3f3a63fbc7"
          },
          "_id": {
            "type": "string",
            "description": "Contact id",
            "example": "64f06b088b6dd050acd85660"
          }  
        }
      },
      "UpdateStatusContactRequest": {
        "type": "object",
        "required": ["favorite"],
        "properties": {
          "favorite": {
            "type": "boolean",
            "description": "Favorite contact",
            "example": "true"
          }
        }
      },
      "UpdateStatusContactResponse": {
        "type": "object",
        "properties": {
          "favorite": {
            "type": "boolean",
            "description": "Favorite contact",
            "example": "true"
          }
        }
      }
    }
  }
}
